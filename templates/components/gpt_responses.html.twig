<div
    {{ attributes }}
    class="mb-2"
>
{%  for message in this.getGptMessages  %}
    {% if not loop.last %}
        <div
            id="{{ message.id }}"
            class="block mt-2 mx-auto w-11/12 rounded-lg border border-primary bg-white shadow-[0_2px_15px_-3px_rgba(0,0,0,0.07),0_10px_20px_-2px_rgba(0,0,0,0.04)] dark:border-primary-300 dark:bg-neutral-600">
            <div
                class="border-b-2 border-[#0000002d] text-lg font-bold px-6 py-3 text-neutral-600 dark:text-neutral-50">
                {{ message.input|raw }}
            </div>
            <div class="p-6">
                <p
                    x-data="{
                    resize () {
                        $el.style.height = '0px';
                        $el.style.height = $el.scrollHeight + 'px'
                    }
                }"
                    x-init="resize()"
                    class="text-base text-primary dark:text-primary-300">
                    {% apply markdown_to_html %}
                        {{ message.output|raw }}
                    {% endapply %}
                </p>
            </div>
        </div>
    {% else %}
        <div
            id="{{ message.id }}"
            class="animate-[fade-in-up_1s_ease-in-out] block mt-2 mx-auto w-11/12 rounded-lg border border-primary bg-white shadow-[0_2px_15px_-3px_rgba(0,0,0,0.07),0_10px_20px_-2px_rgba(0,0,0,0.04)] dark:border-primary-300 dark:bg-neutral-600">
            <div
                class="border-b-2 border-[#0000002d] text-lg font-bold px-6 py-3 text-neutral-600 dark:text-neutral-50">
                {{ message.input|raw }}
            </div>
            <div class="p-6">
                <p
                    x-data="{
                    resize () {
                        $el.style.height = '0px';
                        $el.style.height = $el.scrollHeight + 'px'
                    },
                }"
                    x-init="
                        resize();
                    "
                    class="block text-base text-primary dark:text-primary-300">
                    {% apply markdown_to_html %}
                        {{ message.output|raw }}
                    {% endapply %}
                </p>
            </div>
        </div>
    {% endif %}
{% endfor %}
</div>
